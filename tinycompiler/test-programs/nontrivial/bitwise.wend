main() {
    int i; int j;

    //            _   _ _____
    //      /\   | \ | |  __ \
    //     /  \  |  \| | |  | |
    //    / /\ \ | . ` | |  | |
    //   / ____ \| |\  | |__| |
    //  /_/    \_\_| \_|_____/

    int and(int a, int b) {
        int result;
        int pow;

        result = 0;
        if (a<0 && b<0) {
            result = -2147483648;
        }
        if (a<0) {
            a = (a + 1073741824) + 1073741824; // +2147483648 does not fit into signed 32 bits, split into two halves
        }
        if (b<0) {
            b = (b + 1073741824) + 1073741824;
        }
        pow = 1;
        while a>0 || b>0 {
            if a % 2 == 1 && b % 2 == 1 {
                result = result + pow;
            }
            a = a / 2;
            b = b / 2;
            pow = pow * 2;
        }
        return result;
    }

    //  __   ______  _____
    //  \ \ / / __ \|  __ \
    //   \ V / |  | | |__) |
    //    > <| |  | |  _  /
    //   / . \ |__| | | \ \
    //  /_/ \_\____/|_|  \_\

    int xor(int a, int b) {
        return a - and(a,b) +  b - and(a,b);
    }

    //    ____  _____
    //   / __ \|  __ \
    //  | |  | | |__) |
    //  | |  | |  _  /
    //  | |__| | | \ \
    //   \____/|_|  \_\

    int or(int a, int b) {
        return xor(xor(a,b),and(a,b));
    }

    //   _   _  ____ _______
    //  | \ | |/ __ \__   __|
    //  |  \| | |  | | | |
    //  | . ` | |  | | | |
    //  | |\  | |__| | | |
    //  |_| \_|\____/  |_|

    int not(int a) {
        return -1 - a;
    }

    //                  _   _                      _       _
    //                 | | | |                    (_)     | |
    //   _ __  _ __ ___| |_| |_ _   _   _ __  _ __ _ _ __ | |_
    //  | '_ \| '__/ _ \ __| __| | | | | '_ \| '__| | '_ \| __|
    //  | |_) | | |  __/ |_| |_| |_| | | |_) | |  | | | | | |_
    //  | .__/|_|  \___|\__|\__|\__, | | .__/|_|  |_|_| |_|\__|
    //  | |                      __/ | | |
    //  |_|                     |___/  |_|

    padprint(int a) {
        int n;
        int nspaces;

        n = a;
        nspaces = 16;
        if (n<=0) {
            nspaces = nspaces - 1;
        }
        while n!=0 {
            n = n / 10;
            nspaces = nspaces - 1;
        }
        n = 0;
        while n<nspaces {
            print " ";
            n = n + 1;
        }
        print a;
    }

    //    ___    _            _
    //   / _ \  | |          | |
    //  | (_) | | |_ ___  ___| |_    ___ __ _ ___  ___  ___
    //   > _ <  | __/ _ \/ __| __|  / __/ _` / __|/ _ \/ __|
    //  | (_) | | ||  __/\__ \ |_  | (_| (_| \__ \  __/\__ \
    //   \___/   \__\___||___/\__|  \___\__,_|___/\___||___/

    int test(int i) {
        if (i<4) {
            if (i<2) {
                if (i<1) {
                    return -1804289383;
                } else {
                    return 1681692777;
                }
            } else {
                if (i<3) {
                    return 1957747793;
                } else {
                    return -719885386;
                }
            }
        } else {
            if (i<6) {
                if (i<5) {
                    return 596516649;
                } else {
                    return 1025202362;
                }
            } else {
                if (i<7) {
                    return 783368690;
                } else {
                    return -2044897763;
                }
            }
        }
    }

    //                      _            _       _ _ _
    //                     | |          | |     | | | |
    //   _ __ _   _ _ __   | |_ ___  ___| |_ ___| | | |
    //  | '__| | | | '_ \  | __/ _ \/ __| __/ __| | | |
    //  | |  | |_| | | | | | ||  __/\__ \ |_\__ \_|_|_|
    //  |_|   \__,_|_| |_|  \__\___||___/\__|___(_|_|_)

    //            _   _ _____
    //      /\   | \ | |  __ \
    //     /  \  |  \| | |  | |
    //    / /\ \ | . ` | |  | |
    //   / ____ \| |\  | |__| |
    //  /_/    \_\_| \_|_____/

    print "     bitwise and";
    i = 0;
    while i<8 {
        padprint(test(i));
        i = i + 1;
    }
    print "\n";
    i = 0;
    while i<8 {
        padprint(test(i));
        j = 0;
        while j<8 {
            padprint(and(test(i), test(j)));
            j = j + 1;
        }
        print "\n";
        i = i + 1;
    }
    print "\n";

    //    ____  _____
    //   / __ \|  __ \
    //  | |  | | |__) |
    //  | |  | |  _  /
    //  | |__| | | \ \
    //   \____/|_|  \_\

    print "      bitwise or";
    i = 0;
    while i<8 {
        padprint(test(i));
        i = i + 1;
    }
    print "\n";
    i = 0;
    while i<8 {
        padprint(test(i));
        j = 0;
        while j<8 {
            padprint(or(test(i), test(j)));
            j = j + 1;
        }
        print "\n";
        i = i + 1;
    }
    print "\n";

    //  __   ______  _____
    //  \ \ / / __ \|  __ \
    //   \ V / |  | | |__) |
    //    > <| |  | |  _  /
    //   / . \ |__| | | \ \
    //  /_/ \_\____/|_|  \_\

    print "     bitwise xor";
    i = 0;
    while i<8 {
        padprint(test(i));
        i = i + 1;
    }
    print "\n";
    i = 0;
    while i<8 {
        padprint(test(i));
        j = 0;
        while j<8 {
            padprint(xor(test(i), test(j)));
            j = j + 1;
        }
        print "\n";
        i = i + 1;
    }
    print "\n";

    //   _   _  ____ _______
    //  | \ | |/ __ \__   __|
    //  |  \| | |  | | | |
    //  | . ` | |  | | | |
    //  | |\  | |__| | | |
    //  |_| \_|\____/  |_|

    print "                ";
    i = 0;
    while i<8 {
        padprint(test(i));
        i = i + 1;
    }
    print "\n     bitwise not";
    j = 0;
    while j<8 {
        padprint(not(test(j)));
        j = j + 1;
    }
    print "\n";
}

